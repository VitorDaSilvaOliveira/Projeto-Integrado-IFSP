@using System.Security.Claims
@using Estoque.Domain.Entities
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager

@{
    ViewBag.Title = "Home";
}

@functions {
    private async Task<string> GetUserFirstName()
    {
        var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
        var user = await UserManager.FindByIdAsync(userId!);
        return user?.FirstName ?? "Usuário";
    }
}

@{
    var name = await GetUserFirstName();
    var hour = DateTime.Now.Hour;
    var greeting = hour switch
    {
        >= 6 and < 12 => "Bom Dia",
        >= 12 and < 18 => "Boa Tarde",
        _ => "Boa Noite"
    };
}

<div class="container mt-5">
    <!-- Saudação -->
    <div class="row mb-4">
        <div class="col">
            <h2 class="text-primary">@greeting, @name.</h2>
        </div>
        <span class="fw-light overflow-hidden">
            Bem-vindo(a) ao Estoque Vip Penha.
            <span class="typed-text fw-bold" data-typed-text='["Vip Penha Estoque", "as últimas novidades."]'></span>
        </span>
    </div>

    <!-- Gráfico de Barras -->
    <div class="chart-container mb-5" style="height: 250px;">
        <canvas id="estoqueChart"></canvas>
    </div>

    <!-- Gráficos de Pizza e Linha lado a lado -->
    <div class="d-flex flex-wrap justify-content-between w-100 mt-4">
        <!-- Gráfico de Pizza -->
        <div class="chart-half-container">
            <h6 class="text-secondary text-center mb-2">Produtos por Categoria</h6>
            <canvas id="pizzaChart"></canvas>
        </div>

        <!-- Gráfico de Linha -->
        <div class="chart-half-container">
            <h6 class="text-secondary text-center mb-2">Evolução Mensal do Estoque</h6>
            <canvas id="estoqueMensalChart"></canvas>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Gráfico de Barras
            new Chart(document.getElementById('estoqueChart').getContext('2d'), {
                type: 'bar',
                data: {
                    labels: ['Abr', 'Mai', 'Jun', 'Jul'],
                    datasets: [
                        {
                            label: 'Entradas',
                            data: [120, 90, 150, 200],
                            backgroundColor: '#3b82f6'
                        },
                        {
                            label: 'Saídas',
                            data: [80, 100, 120, 180],
                            backgroundColor: '#ef4444'
                        }
                    ]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });

            // Gráfico de Pizza
            new Chart(document.getElementById('pizzaChart').getContext('2d'), {
                type: 'pie',
                data: {
                    labels: ['Eletrônicos', 'Vestuário', 'Alimentos', 'Limpeza'],
                    datasets: [{
                        data: [40, 25, 20, 15],
                        backgroundColor: ['#6366f1', '#10b981', '#f59e0b', '#ef4444']
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false
                }
            });

            // Gráfico de Linha
            const meses = [...Array(12).keys()].map(i => {
                const d = new Date();
                d.setMonth(d.getMonth() - (11 - i));
                return d.toLocaleString('pt-BR', { month: 'short' }).toUpperCase();
            });

            const valoresEstoque = Array.from({ length: 12 }, () => Math.floor(300 + Math.random() * 200));
            const menorValor = Math.min(...valoresEstoque);
            const maiorValor = Math.max(...valoresEstoque);

            new Chart(document.getElementById('estoqueMensalChart').getContext('2d'), {
                type: 'line',
                data: {
                    labels: meses,
                    datasets: [{
                        label: 'Estoque Total',
                        data: valoresEstoque,
                        borderColor: '#0ea5e9',
                        backgroundColor: 'rgba(14, 165, 233, 0.2)',
                        fill: true,
                        tension: 0.4,
                        pointRadius: 4,
                        pointBackgroundColor: '#0ea5e9'
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            min: Math.max(0, menorValor - 40),
                            max: maiorValor + 40,
                            ticks: {
                                stepSize: 50
                            }
                        }
                    }
                }
            });
        });
    </script>
}

<style>
    .chart-container {
        position: relative;
        width: 100%;
        height: 250px;
    }

    .chart-half-container {
        position: relative;
        width: 49%;
        height: 250px;
    }

        .chart-half-container canvas {
            width: 100% !important;
            height: 100% !important;
        }

    .chart-container canvas {
        width: 100% !important;
        height: 100% !important;
    }
</style>
